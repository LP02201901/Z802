/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emuladorprocesadorz80;

import javax.swing.SwingConstants;

/**
 *
 * @author User
 */
public class MemoriaView0 extends javax.swing.JDialog {
    
    public static EmuladorProcesadorZ80 procesador = new EmuladorProcesadorZ80();
    
    public static String [] memoria = new String [65536];
    public static String [] puertos = new String [256];
    /**
     * Creates new form memoriaView
     */
    public MemoriaView0() {
        initComponents();
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel2.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel2.setVisible(false);
        txtRam.setEditable(false);
        txtPuertos.setEditable(false);
        jScrollPane1.setVisible(false);
        ramInit();
        puertoInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtRam = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPuertos = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(300, 600));
        setMinimumSize(new java.awt.Dimension(300, 600));
        setResizable(false);

        txtRam.setColumns(20);
        txtRam.setRows(5);
        jScrollPane2.setViewportView(txtRam);

        txtPuertos.setColumns(20);
        txtPuertos.setRows(5);
        jScrollPane1.setViewportView(txtPuertos);

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 2, 14)); // NOI18N
        jLabel1.setText("Memoria");

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 2, 14)); // NOI18N
        jLabel2.setText("Puertos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txtPuertos;
    private javax.swing.JTextArea txtRam;
    // End of variables declaration//GEN-END:variables


    public void ramInit(){
        
        String input = "00000000";
        for (int i = 1; i < memoria.length; i++) {
            input = input+",00000000";
        }
        memoria = input.split(",");
        input = "00000.00000000";
        String linea ;
        for (int i = 1; i < memoria.length; i++) {
            linea = ""+i;
            switch(linea.length()){
                case 1:
                    linea = "0000"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 2:
                    linea = "000"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 3:
                    linea = "00"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 4:
                    linea = "0"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 5:
                    linea = ""+i;
                    input = input+","+linea+".00000000";
                    break;
            }
            
        }
        input = input.replace(",", ",\n");
        txtRam.setText(input);
    }
    
    public void puertoInit(){
        String input = "00000000";
        for (int i = 1; i < puertos.length; i++) {
            input = input+",00000000";
        }
        memoria = input.split(",");
        input = "000.00000000";
        String linea ;
        for (int i = 1; i < memoria.length; i++) {
            linea = ""+i;
            switch(linea.length()){
                case 1:
                    linea = "00"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 2:
                    linea = "0"+i;
                    input = input+","+linea+".00000000";
                    break;
                case 3:
                    linea = ""+i;
                    input = input+","+linea+".00000000";
                    break;
            }
        }
        input = input.replace(",", ",\n");
        txtPuertos.setText(input);
    }
    
    public void ram(){//change
        String[] input = procesador.getMemoria();
        //input = input.replace("[", "");
        //input = input.replace("]", "");
        //input = input.replace(" ", "");
        //String [] aux = input.split(",");
        for (int i = 0; i < memoria.length; i++) {
            if (!input[i].equals(memoria[i])) {
                txtRam.replaceRange(input[i], (i*16+6), (i*16+14));
                memoria[i]=input[i];
            }
        }
    }
    
    public void puertosIO(){
        String input2 = procesador.getIO();
        input2 = input2.replace("[", "");
        input2 = input2.replace("]", "");
        input2 = input2.replace(" ", "");
        String [] aux1 = input2.split(",");
        for (int i = 0; i < puertos.length; i++) {
            if (!aux1[i].equals(puertos[i])) {
                txtPuertos.replaceRange(aux1[i], (i*14+4), (i*14+12));
                puertos[i]=aux1[i];
            }
        }
    }

}
